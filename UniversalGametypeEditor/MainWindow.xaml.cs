
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Media;
using System.Net;
using System.Reflection;
using System.Text.RegularExpressions;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Forms;
using System.Windows.Input;
using UniversalGametypeEditor.Properties;
using Newtonsoft.Json.Linq;
using System.Collections.Specialized;
using System.Collections.Generic;
using System.Linq;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Threading;
using System.Threading.Tasks;
using System.ComponentModel;
using static UniversalGametypeEditor.ReadGametype;
using Newtonsoft.Json;
using Microsoft.Win32;
using ICSharpCode.AvalonEdit.Highlighting.Xshd;
using ICSharpCode.AvalonEdit.Highlighting;
using System.Xml;



namespace UniversalGametypeEditor
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : System.Windows.Window
    {
        



        //private int lastOffset = 0xD50;
        //private int lastGlobalOffset = 0xC28;
        //private int playerNumIndex = 0;
        //private int globalNumIndex = 15;
        //private int objectNumIndex = 0;
        //private int lastObjectOffset = 0xBE;
        private readonly System.Windows.Forms.Timer timer = new();
        //private readonly System.Windows.Forms.Timer playerNumTimer = new();
        //private readonly System.Windows.Forms.Timer globalNumTimer = new();
        //private readonly System.Windows.Forms.Timer objectNumTimer = new();
        private readonly System.Windows.Forms.Timer menuTimer = new();
        static readonly byte[] header = { 0x5F, 0x62, 0x6C, 0x66, 0x00, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x02, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x68, 0x64, 0x72, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x0A, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x29, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x02, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x70, 0x76, 0x72, 0x00, 0x00, 0x50, 0x28, 0x00, 0x36, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20 };
        static readonly byte[] ender = { 0x5F, 0x65, 0x6F, 0x66, 0x00, 0x00, 0x00, 0x11, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x53, 0x18, 0x00 };
        private readonly int reachLength = 20480;
        private readonly int h42aLength = 31744;
        private byte[] fileBytes = Array.Empty<byte>();
        //byte[] sound = Convert.FromBase64String("");
        public ObservableCollection<string> WatchedFilesList { get; set; } =
   new ObservableCollection<string>();
        private bool copying;
        StringCollection folders = new();
        ObservableCollection<string> dirHistory = new();
        private ObservableCollection<System.Windows.Controls.UserControl> _gametype = new ObservableCollection<System.Windows.Controls.UserControl>();
        public ObservableCollection<System.Windows.Controls.UserControl> Gametype
        {
            get => _gametype;
            set
            {
                _gametype = value;
                NotifyPropertyChanged("Gametype");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }


        public static string? GetSteamPath()
        {
            const string steamRegistryKey = @"Software\Valve\Steam";
            const string steamRegistryValue = "SteamPath";

            using (RegistryKey? key = Registry.CurrentUser.OpenSubKey(steamRegistryKey))
            {
                if (key != null)
                {
                    object? value = key.GetValue(steamRegistryValue);
                    if (value != null)
                    {
                        return value.ToString();
                    }
                }
            }

            return null;
        }



        public ObservableCollection<string> HotReloadFilesList { get; set; } =
   new ObservableCollection<string>();



        Overlay overlay = new();
        public MainWindow()
        {
            InitializeComponent();
            //ScriptCompiler sc = new();
            //read the script.txt file
            //string script = File.ReadAllText("script.txt");
            //sc.CompileScript(script);

            ConfigureSyntaxHighlighting();

            //CheckForUpdates(null, null);

            //CheckPlayerNumbers();
            //CheckGlobalNumbers();
            //CheckObjectNumbers();

            //string script = ReadBin.ConvertScriptToBinary("C:\\Program Files (x86)\\Steam\\steamapps\\common\\Halo The Master Chief Collection\\haloreach\\game_variants\\SvE AnvilEditor.bin");
            //Print the bytes
            //Debug.WriteLine(script);
            ReadGametype rg = new();

            //rg.ReadBinary();

            //MegaloEditPatcher.Patch();

            CreatePlaylist.GetUUID();
            
            if (Settings.Default.GameDir == "Undefined")
            {
                //Attempt to autmoatically locate the game directory
                string steamPath = GetSteamPath();
                if (steamPath != null)
                {
                    string gameDir = $"{steamPath}\\steamapps\\common\\Halo The Master Chief Collection";
                    if (Directory.Exists(gameDir))
                    {
                        Settings.Default.GameDir = gameDir;
                        Settings.Default.Save();
                    }
                }   
            }

            if (Settings.Default.GameDir != "Undefined")
            {

                // Check if the haloreach\game_variants, groundhog\game_variants, and halo4\game_variants directories exist in the file paths that are watched
                StringCollection watchedFolders = Settings.Default.FilePathList;

                // Initialize the collection if it is null
                if (watchedFolders == null)
                {
                    watchedFolders = new StringCollection();
                    Settings.Default.FilePathList = watchedFolders;
                }

                // Add the game variants folders to the watched folders
                if (!watchedFolders.Contains($"{Settings.Default.GameDir}\\haloreach\\game_variants"))
                {
                    watchedFolders.Add($"{Settings.Default.GameDir}\\haloreach\\game_variants");
                }
                if (!watchedFolders.Contains($"{Settings.Default.GameDir}\\groundhog\\game_variants"))
                {
                    watchedFolders.Add($"{Settings.Default.GameDir}\\groundhog\\game_variants");
                }
                if (!watchedFolders.Contains($"{Settings.Default.GameDir}\\halo4\\game_variants"))
                {
                    watchedFolders.Add($"{Settings.Default.GameDir}\\halo4\\game_variants");
                }

                Settings.Default.FilePath = $"{Settings.Default.GameDir}\\haloreach\\game_variants";
                Settings.Default.GameIndex = 0;

                // Save the updated settings
                Settings.Default.Save();


                //DetectMenus($"{Settings.Default.GameDir}\\haloreach\\game_variants\\koth_054.bin", "Halo Reach");
                //DetectMenus($"{Settings.Default.GameDir}\\groundhog\\game_variants\\H2A_100_150_Slayer_Pro_137.bin", "Halo 2 Anniversary");
                //DetectMenus($"{Settings.Default.GameDir}\\halo4\\game_variants\\H4_CTF_132.bin", "Halo 4");
            }

            UpdateSettingsFromFile();
            UpdateDirHistoryComboBox();

            FilesListWatched.SelectionChanged += FilesListWatched_SelectionChanged;
            FilesListHR.SelectionChanged += FilesListHR_SelectionChanged;
            DataContext = this;
            StateChanged += MainWindowStateChangeRaised;

            //Decompiled.ItemsSource = gametype;
            if (Settings.Default.GameIndex != -1)
            {
                GameSelector.SelectedIndex = Settings.Default.GameIndex;
            }


            var menuDropAlignmentField = typeof(SystemParameters).GetField("_menuDropAlignment", BindingFlags.NonPublic | BindingFlags.Static);
            Action setAlignmentValue = () => {
                if (SystemParameters.MenuDropAlignment && menuDropAlignmentField != null) menuDropAlignmentField.SetValue(null, false);
            };
            setAlignmentValue();
            SystemParameters.StaticPropertyChanged += (sender, e) => { setAlignmentValue(); };

            if (Settings.Default.FilePath != "Undefined")
            {
                string folderName = Settings.Default.FilePath;
                GetFiles(folderName, WatchedFilesList);
                if (Settings.Default.MultiDirectory)
                {
                    RegisterWatchers(Settings.Default.FilePathList);
                } else
                {
                    RegisterWatcher(Settings.Default.FilePath, watcher);
                }
                
            }

            if (Settings.Default.HotReloadPath != "Undefined")
            {
                //HotReloadDir.Text = Settings.Default.HotReloadPath;
                string folderName = Settings.Default.HotReloadPath;
                GetFiles(folderName, HotReloadFilesList);
            }

            CheckTutorialCompletion();
            //Show Overlay window if the process EasyAntiCheat.exe is not open
            Process[] pname = Process.GetProcessesByName("EasyAntiCheat");
            //Get whether MCC is open
            Process[] mcc = Process.GetProcessesByName("MCC-Win64-Shipping");
            if (pname.Length == 0 && mcc.Length != 0)
            {
                overlay.Show();
            }
            if (pname.Length > 0)
            {
                overlay.Close();
            }
            this.Show();

        }

        public void ToggleOverlay(object sender, RoutedEventArgs e)
        {
            //if overlay is shown, hide it and vice versa
            if (overlay != null)
            {
                if (overlay.IsVisible)
                {
                    overlay.Hide();
                }
                else
                {
                    overlay.Show();
                }
            }
        }

            private async void PatchMegaloEdit(object sender, RoutedEventArgs e)
        {
            UpdateLastEvent("Patching MegaloEdit");
            int result = await Task.Run(() => MemoryWriter.WriteOpcode2());
            if (result == 1)
            {
                UpdateLastEvent("ERROR: Failed to Patch MegaloEdit: MegaloEdit Not Running");
                return;
            }
            
            if (result == 2)
            {
                UpdateLastEvent("SUCCESS: Patched MegaloEdit");
                return;
            }
            if (result == 3)
            {
                UpdateLastEvent("ERROR: Failed to patch MegaloEdit: Could not find address or already patched");
                return;
            }
            UpdateLastEvent("ERROR: Failed to patch MegaloEdit ");
        }



        //private void FreezeValue(object sender, RoutedEventArgs e)
        //{
        //    if ((bool)CheckBox.IsChecked)
        //    {
        //        Settings.Default.FreezeValue = true;
        //    }

        //    if (!(bool)CheckBox.IsChecked)
        //    {
        //        Settings.Default.FreezeValue = false;
        //    }
        //}

        //private void DecrementButton_Click(object sender, RoutedEventArgs e)
        //{

        //    if (Settings.Default.NumberSetting == "Global")
        //    {
        //        if (lastGlobalOffset > 0xBEC)
        //        {
        //            lastGlobalOffset -= 4;
        //            globalNumIndex -= 1;
        //        }
        //    }

        //    if (Settings.Default.NumberSetting == "Player")
        //    {
        //        if (lastOffset == 0xD50)
        //        {
        //            Settings.Default.NumberSetting = "Global";
        //        }

        //        if (lastOffset > 0xD50)
        //        {
        //            lastOffset -= 4;
        //            playerNumIndex -= 1;
        //        }


        //    }

        //    if (Settings.Default.NumberSetting == "Object")
        //    {
        //        if (lastObjectOffset == 0xBE)
        //        {
        //            Settings.Default.NumberSetting = "Player";
        //        }

        //        if (lastObjectOffset > 0xBE)
        //        {
        //            lastObjectOffset -= 4;
        //            objectNumIndex -= 1;
        //        }


        //    }



        //}

        //private void IncrementButton_Click(object sender, RoutedEventArgs e)
        //{


        //    if (Settings.Default.NumberSetting == "Object")
        //    {
        //        if (lastObjectOffset < 0xCC + ((playerIndex - 1) * 0x84) )
        //        {
        //            lastObjectOffset += 2;
        //            objectNumIndex += 1;
        //        }

        //    }

        //    if (Settings.Default.NumberSetting == "Player")
        //    {
        //        if (lastOffset == 0xD6C)
        //        {
        //            Settings.Default.NumberSetting = "Object";
        //            PlayerIndex.Text = "Object";
        //        }

        //        if (lastOffset < 0xD6C + ((playerIndex - 1) * 0xD4))
        //        {
        //            lastOffset += 4;
        //            playerNumIndex += 1;
        //        }



        //    }





        //    if (Settings.Default.NumberSetting == "Global")
        //    {
        //        if (lastGlobalOffset == 0xC28)
        //        {
        //            Settings.Default.NumberSetting = "Player";
        //            PlayerIndex.Text = "Player 1";
        //        }

        //        if (lastGlobalOffset < 0xC28)
        //        {
        //            lastGlobalOffset += 4;
        //            globalNumIndex += 1;
        //        }


        //    }

        //}
        //private int playerIndex = 1;
        //private void IncrementPlayer_Click(object sender, RoutedEventArgs e)
        //{
        //    if (Settings.Default.NumberSetting == "Player")
        //    {
        //        if (playerIndex < 16)
        //        {
        //            playerIndex += 1;
        //            lastOffset += 0xE0;
        //        }
        //        PlayerIndex.Text = "Player " + playerIndex.ToString();
        //    }

        //    if (Settings.Default.NumberSetting == "Global")
        //    {
        //        PlayerIndex.Text = "Global";
        //    }

        //    if (Settings.Default.NumberSetting == "Object")
        //    {
        //        playerIndex += 1;
        //        lastObjectOffset += 0x84;
        //        PlayerIndex.Text = "Object " + playerIndex.ToString();
        //    }


        //}

        //private void DecrementPlayer_Click(object sender, RoutedEventArgs e)
        //{

        //    if (Settings.Default.NumberSetting == "Player")
        //    {
        //        if (playerIndex > 1)
        //        {
        //            playerIndex -= 1;
        //            lastOffset -= 0xE0;
        //        }
        //        PlayerIndex.Text = "Player " + playerIndex.ToString();
        //    }

        //    if (Settings.Default.NumberSetting == "Global")
        //    {
        //        PlayerIndex.Text = "Global";
        //    }

        //    if (Settings.Default.NumberSetting == "Object")
        //    {
        //        playerIndex -= 1;
        //        lastObjectOffset -= 0x84;
        //        PlayerIndex.Text = "Object " + playerIndex.ToString();
        //    }
        //}



        //private IntPtr address;
        //private int playerNum;
        //private bool resultPlayer;
        //private bool resultGlobal;
        //private bool resultObject;

        //private void CheckPlayerNumbers()
        //{
        //    playerNumTimer.Interval = 500;
        //    playerNumTimer.Tick += (sender, e) =>
        //    {
        //        if (Settings.Default.NumberSetting == "Player")
        //        {
        //            //int[] offsets = { 0x024FDF24, 0x1B0, 0x60, 0x78, 0x130, 0x560, lastOffset };
        //            int[] offsets = { 0x02757E44, 0x560, lastOffset };

        //        resultPlayer = MemoryScanner.ScanPointer(offsets, out playerNum, out address);

        //        if (resultPlayer == false)
        //        {
        //            playerNumTimer.Stop();
        //        }


        //            PlayerNumb.Text = "Player Number " + playerNumIndex + ": " + playerNum.ToString();
        //        }

        //    };

        //        playerNumTimer.Start();

        //}

        //private void CheckObjectNumbers()
        //{
        //    objectNumTimer.Interval = 500;
        //    objectNumTimer.Tick += (sender, e) =>
        //    {
        //        if (Settings.Default.NumberSetting == "Object")
        //        {
        //            //int[] offsets = { 0x024FDF24, 0x1B0, 0x60, 0x78, 0x130, 0x560, lastOffset };
        //            int[] offsets = { 0x02767E4C, 0x4F8, lastObjectOffset };

        //            resultObject = MemoryScanner.ScanPointer(offsets, out int objectNum, out address);

        //            if (resultObject == false)
        //            {
        //                objectNumTimer.Stop();
        //            }


        //            PlayerNumb.Text = "Object Number " + objectNumIndex + ": " + objectNum.ToString();
        //        }

        //    };

        //    objectNumTimer.Start();

        //}

        //private void CheckGlobalNumbers()
        //{
        //    //Scan and return the result periodically for offsets 024FE0A0, 1BC, 10, 40, 60, 40, 150, and BF4
        //    //If the result is false, stop the timer

        //    globalNumTimer.Interval = 500;
        //    globalNumTimer.Tick += (sender, e) =>
        //    {
        //        if (Settings.Default.NumberSetting == "Global")
        //        {
        //            int[] offsets = { 0x02757E44, 0x150, lastGlobalOffset };

        //        resultGlobal = MemoryScanner.ScanPointer(offsets, out int globalNum, out address);

        //        if (resultGlobal == false)
        //        {
        //            globalNumTimer.Stop();
        //        }
        //            PlayerNumb.Text = "Global Number " + globalNumIndex + ": " + globalNum.ToString();
        //            PlayerIndex.Text = "Global";
        //            //Debug.WriteLine(address.ToString("X16"));
        //        }
        //    };

        //    globalNumTimer.Start();
        //}

        //private void Slider_ValueChanged(object sender, RoutedEventArgs e)
        //{
        //    WriteDelay.Text = $"Write Frequency (ms): {Slider.Value}";
        //    Settings.Default.WriteDelay = Slider.Value;
        //}

        //private void WriteNewVal(object sender, System.Windows.Input.KeyEventArgs e)
        //{

        //    if (e.Key == Key.Enter)
        //    {
        //        // Enter key was pressed
        //        // Perform the desired action here

        //        // To prevent the "ding" sound, you can suppress the key press event



        //        e.Handled = true;
        //        if (!int.TryParse(NewValToWrite.Text, out int result))
        //        {
        //            return;
        //        }
        //        string valueToWrite = NewValToWrite.Text;
        //        MemoryWriter.WriteValue(address, Convert.ToInt16(valueToWrite));

        //        Task.Run(() =>
        //        {
        //            while (Settings.Default.FreezeValue)
        //            {
        //                MemoryWriter.WriteValue(address, Convert.ToInt16(valueToWrite));
        //                if (Settings.Default.WriteDelay > 0)
        //                {
        //                    Thread.Sleep((int)Settings.Default.WriteDelay);
        //                }
        //            }
        //        });

        //        NewValToWrite.Text = "";
        //    }

        //}

        //private void TryLoadNumbers(object sender, RoutedEventArgs e)
        //{
        //    CheckPlayerNumbers();
        //    CheckGlobalNumbers();
        //    CheckObjectNumbers();
        //}

        //private void TextWritten(object sender, TextCompositionEventArgs e)
        //{

        //    if (e.Text == "-" && !NewValToWrite.Text.Contains("-"))
        //    {
        //        e.Handled = false;
        //        return;
        //    }

        //    if (!IsValidNumericInput(e.Text))
        //    {
        //        // Cancel the input by marking the event as handled
        //        e.Handled = true;
        //    }

        //    string combinedVal = NewValToWrite.Text + e.Text;
        //    int num = 0;
        //    try
        //    {
        //        num = int.Parse(combinedVal);
        //    } catch (System.FormatException ex)
        //    {
        //        e.Handled = true;
        //    }

        //    if (num < -32767 || num > 32767)
        //    {
        //        e.Handled = true;
        //    }
        //}

        //private bool IsValidNumericInput(string input)
        //{
        //    // Check if the input is a valid integer value within the desired range
        //    if (int.TryParse(input, out int value))
        //    {
        //        return value >= -32767 && value <= 32767;
        //    }

        //    return false;
        //}
        private Gametype ReadGT;
        private readonly GametypeHeader? deserializedJSON2;
        private FileHeaderViewModel viewModel;
        private GametypeHeaderViewModel viewModel2;
        private ModeSettingsViewModel viewModel3;
        private SpawnSettingsViewModel viewModel4;
        private GameSettingsViewModel viewModel5;
        private PowerupTraitsViewModel viewModel6;
        private TeamSettingsViewModel viewModel7;
        private LoadoutClusterViewModel viewModel8;

        private void CompileGametype(object sender, RoutedEventArgs e)
        {
            Debug.WriteLine("Clicked Compile Gametype");
            CompileVariant();
        }


        private void CompileVariant()
        {
            if (Settings.Default.Selected != "Undefined")
            {
                Dispatcher.BeginInvoke((Action)delegate ()
                {
                    FilesListWatched.SelectedItem = Settings.Default.Selected;
                });

                WriteGametype wg = new();
                string filePath = $"{Settings.Default.FilePath}\\{Settings.Default.Selected}";

                if (File.Exists(filePath))
                {
                    // Initialize ReadGametype and read binary data
                    ReadGametype rg = new ReadGametype();
                    rg.ReadBinary(filePath);

                    // Deserialize JSON data
                    FileHeader fileHeader = JsonConvert.DeserializeObject<FileHeader>(rg.gt.FileHeader);
                    GametypeHeader gametypeHeader = JsonConvert.DeserializeObject<GametypeHeader>(rg.gt.GametypeHeader);
                    ModeSettings modeSettings = JsonConvert.DeserializeObject<ModeSettings>(rg.gt.ModeSettings);
                    SpawnSettings spawnSettings = JsonConvert.DeserializeObject<SpawnSettings>(rg.gt.SpawnSettings);
                    GameSettings gameSettings = JsonConvert.DeserializeObject<GameSettings>(rg.gt.GameSettings);
                    PowerupTraits powerupTraits = JsonConvert.DeserializeObject<PowerupTraits>(rg.gt.PowerupTraits);
                    TeamSettings teamSettings = JsonConvert.DeserializeObject<TeamSettings>(rg.gt.TeamSettings);
                    LoadoutCluster loadoutCluster = JsonConvert.DeserializeObject<LoadoutCluster>(rg.gt.loadoutCluster);

                    // Initialize view models with deserialized data
                    FileHeaderViewModel fileHeaderViewModel = new FileHeaderViewModel(fileHeader);
                    GametypeHeaderViewModel gametypeHeaderViewModel = new GametypeHeaderViewModel(gametypeHeader);
                    ModeSettingsViewModel modeSettingsViewModel = new ModeSettingsViewModel(modeSettings);
                    SpawnSettingsViewModel spawnSettingsViewModel = new SpawnSettingsViewModel(spawnSettings);
                    GameSettingsViewModel gameSettingsViewModel = new GameSettingsViewModel(gameSettings);
                    PowerupTraitsViewModel powerupTraitsViewModel = new PowerupTraitsViewModel(powerupTraits);
                    TeamSettingsViewModel teamSettingsViewModel = new TeamSettingsViewModel(teamSettings);
                    LoadoutClusterViewModel loadoutClusterViewModel = new LoadoutClusterViewModel(loadoutCluster);

                    // Pass the initialized view models to the WriteBinaryFile method
                    wg.WriteBinaryFile(filePath, gametypeHeader, fileHeaderViewModel, gametypeHeaderViewModel, modeSettingsViewModel, spawnSettingsViewModel, gameSettingsViewModel, powerupTraitsViewModel, teamSettingsViewModel, loadoutClusterViewModel);
                }

                // Reselect the selected item
            }
        }








        private void FilesListHR_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (e.AddedItems.Count != 0)
            {
                HandleFiles((string)e.AddedItems[0], Settings.Default.HotReloadPath, WatcherChangeTypes.Changed, false);
            }
        }



        private void AddDataToUI<T>(T viewModel, string header, ObservableCollection<System.Windows.Controls.UserControl> gametype) where T : class
        {
            if (viewModel == null) return;

            DropDown parentDropDown = CreateParentDropDown(header);
            Type viewModelType = typeof(T);
            PropertyInfo[] properties = viewModelType.GetProperties();

            foreach (var property in properties)
            {
                var propertyValue = property.GetValue(viewModel);
                if (propertyValue != null && IsComplexType(property))
                {
                    Expander nestedDropDown = CreateNestedDropDown(property.Name);
                    AddNestedPropertiesToUI(propertyValue, nestedDropDown);
                    if (nestedDropDown.Content is StackPanel panel && panel.Children.Count > 0)
                    {
                        parentDropDown.DropdownData.Children.Add(nestedDropDown);
                    }
                }
                else if (propertyValue != null)
                {
                    GametypeData gd = CreateGametypeData(property, propertyValue);
                    parentDropDown.DropdownData.Children.Add(gd);
                    AddEventHandlers(gd, property, viewModel);
                }
            }

            if (parentDropDown.DropdownData.Children.Count > 0)
            {
                gametype.Add(parentDropDown);
            }
        }

        private DropDown CreateParentDropDown(string header)
        {
            return new DropDown
            {
                MaxHeight = 400,
                Expander = { Header = header }
            };
        }

        private Expander CreateNestedDropDown(string header)
        {
            return new Expander
            {
                Header = header,
                Foreground = new SolidColorBrush(Colors.White),
                Content = new StackPanel { Name = "DropdownData" }
            };
        }

        private bool IsComplexType(PropertyInfo property)
        {
            return !property.PropertyType.IsPrimitive &&
                   property.PropertyType != typeof(string) &&
                   !property.PropertyType.IsEnum &&
                   !property.PropertyType.IsValueType;
        }


        private void AddNestedPropertiesToUI(object propertyValue, Expander nestedDropDown)
        {
            if (nestedDropDown.Content == null)
            {
                nestedDropDown.Content = new StackPanel();
            }

            var stackPanel = nestedDropDown.Content as StackPanel;
            if (stackPanel == null)
            {
                throw new InvalidOperationException("nestedDropDown.Content must be a StackPanel.");
            }

            //Debug.WriteLine($"propertyValue type: {propertyValue.GetType()}");

            if (propertyValue is ObservableCollection<ScriptedPlayerTraitItemViewModel> traitItems)
            {
                foreach (var traitItem in traitItems)
                {
                    if (traitItem == null) continue;
                    Expander traitDropDown = CreateNestedDropDown(traitItem.GetType().Name);
                    AddNestedPropertiesToUI(traitItem, traitDropDown);
                    stackPanel.Children.Add(traitDropDown);
                }
            }
            else
            {
                var nestedProperties = propertyValue.GetType().GetProperties();
                foreach (var nestedProperty in nestedProperties)
                {
                    if (nestedProperty.Name == "HasValue" || nestedProperty.Name == "Value") continue;

                    var indexParams = nestedProperty.GetIndexParameters();
                    var nestedPropertyValue = indexParams.Length == 0 ?
                                              nestedProperty.GetValue(propertyValue) :
                                              nestedProperty.GetValue(propertyValue, new object[indexParams.Length]);

                    if (nestedPropertyValue == null) continue;

                    //Debug.WriteLine($"Processing property: {nestedProperty.Name}, Type: {nestedPropertyValue.GetType()}");

                    if (nestedPropertyValue is ObservableCollection<ScriptedPlayerTraitItemViewModel> nestedTraitItems)
                    {
                        foreach (var nestedTraitItem in nestedTraitItems)
                        {
                            if (nestedTraitItem == null) continue;
                            Expander nestedTraitDropDown = CreateNestedDropDown(nestedTraitItem.GetType().Name);
                            AddNestedPropertiesToUI(nestedTraitItem, nestedTraitDropDown);
                            stackPanel.Children.Add(nestedTraitDropDown);
                        }
                    }
                    else if (nestedPropertyValue is ScriptedPlayerTraitsViewModel scriptedPlayerTraitsViewModel)
                    {
                        Expander scriptedTraitsDropDown = CreateNestedDropDown(scriptedPlayerTraitsViewModel.GetType().Name);
                        AddNestedPropertiesToUI(scriptedPlayerTraitsViewModel, scriptedTraitsDropDown);
                        stackPanel.Children.Add(scriptedTraitsDropDown);
                    }
                    else if (nestedPropertyValue is PlayerTraitsViewModel playerTraits)
                    {
                        Expander playerTraitsDropDown = CreateNestedDropDown(nestedProperty.Name);
                        AddNestedPropertiesToUI(playerTraits, playerTraitsDropDown);
                        stackPanel.Children.Add(playerTraitsDropDown);
                    }
                    else if (nestedPropertyValue is ScriptedPlayerTraitItemViewModel traitItem)
                    {
                        Expander traitItemDropDown = CreateNestedDropDown(traitItem.GetType().Name);
                        AddNestedPropertiesToUI(traitItem, traitItemDropDown);
                        stackPanel.Children.Add(traitItemDropDown);
                    }
                    else
                    {
                        GametypeData gd = CreateGametypeData(nestedProperty, nestedPropertyValue);
                        stackPanel.Children.Add(gd);
                        AddEventHandlers(gd, nestedProperty, propertyValue);
                    }
                }
            }
        }











        private GametypeData CreateGametypeData(PropertyInfo property, object propertyValue)
        {
            GametypeData gd = new();
            gd.value_name.Text = property.Name;

            if (propertyValue is bool boolValue)
            {
                gd.value.Visibility = Visibility.Collapsed;
                gd.enabled.Visibility = Visibility.Visible;
                gd.enabled.IsChecked = boolValue;
            }
            else if (propertyValue.GetType().IsEnum)
            {
                SetupEnumDropdown(gd, propertyValue);
            }
            else
            {
                gd.value.Text = propertyValue.ToString();
            }

            return gd;
        }

        private void SetupEnumDropdown(GametypeData gd, object propertyValue)
        {
            gd.value.Visibility = Visibility.Collapsed;
            gd.enum_dropdown.Visibility = Visibility.Visible;

            var enumType = propertyValue.GetType();
            var enumValues = Enum.GetValues(enumType);
            foreach (var enumValue in enumValues)
            {
                gd.enum_dropdown.Items.Add(enumValue.ToString());
            }
            gd.enum_dropdown.SelectedItem = propertyValue.ToString();
        }

        private void AddEventHandlers(GametypeData gd, PropertyInfo property, object viewModel)
        {
            gd.value.TextChanged += (sender, e) =>
            {
                object val = property.PropertyType == typeof(int?) && int.TryParse(gd.value.Text, out int result) ? (object)result : Convert.ChangeType(gd.value.Text, property.PropertyType);
                property.SetValue(viewModel, val);
            };

            gd.enabled.Checked += (sender, e) => property.SetValue(viewModel, true);
            gd.enabled.Unchecked += (sender, e) => property.SetValue(viewModel, false);

            gd.enum_dropdown.SelectionChanged += (sender, e) =>
            {
                var enumType = property.PropertyType;
                var enumValue = Enum.Parse(enumType, gd.enum_dropdown.SelectedItem.ToString());
                property.SetValue(viewModel, enumValue);
            };
        }

        

        ReadGametype rg = new();
        private void DeserializeAndAddToUI<T, V>(string json, string header, ObservableCollection<System.Windows.Controls.UserControl> gametype) where V : class
        {
            if (!string.IsNullOrEmpty(json))
            {
                T? deserializedObject = JsonConvert.DeserializeObject<T>(json);
                if (deserializedObject != null)
                {
                    if (typeof(V) == typeof(ScriptedPlayerTraitsViewModel))
                    {
                        List<ScriptedPlayerTraits> scriptedPlayerTraits = JsonConvert.DeserializeObject<List<ScriptedPlayerTraits>>(json); // Deserialize as List
                        ScriptedPlayerTraitsViewModel viewModel = PopulateScriptedPlayerTraitsViewModel(scriptedPlayerTraits);
                        AddDataToUI(viewModel, header, gametype);
                    }
                    else
                    {
                        V viewModel = (V)Activator.CreateInstance(typeof(V), deserializedObject);
                        AddDataToUI(viewModel, header, gametype);
                    }
                }
            }
        }






        public void LoadSettings()
        {
            DeserializeAndAddToUI<ModeSettings, ModeSettingsViewModel>(rg.gt.ModeSettings, "Mode Settings", Gametype);
            DeserializeAndAddToUI<SpawnSettings, SpawnSettingsViewModel>(rg.gt.SpawnSettings, "Spawn Settings", Gametype);
            DeserializeAndAddToUI<GameSettings, GameSettingsViewModel>(rg.gt.GameSettings, "Game Settings", Gametype);

            if (Settings.Default.DecompiledVersion == 0)
            {
                DeserializeAndAddToUI<PowerupTraits, PowerupTraitsViewModel>(rg.gt.PowerupTraits, "Powerup Traits", Gametype);
                DeserializeAndAddToUI<TeamSettings, TeamSettingsViewModel>(rg.gt.TeamSettings, "Team Settings", Gametype);
                DeserializeAndAddToUI<LoadoutCluster, LoadoutClusterViewModel>(rg.gt.loadoutCluster, "Loadout Cluster", Gametype);
                string scriptedPlayerTraitsJson = JsonConvert.SerializeObject(rg.gt.scriptedPlayerTraits);
                DeserializeAndAddToUI<List<ScriptedPlayerTraits>, ScriptedPlayerTraitsViewModel>(scriptedPlayerTraitsJson, "Scripted Player Traits", Gametype);

                var scriptOptionsViewModel = rg.gt.scriptOptions;
                // Add the data to the UI
                AddDataToUI(scriptOptionsViewModel, "Script Options", _gametype);
                AddDataToUI(rg.gt.Strings, "Strings", _gametype);
                AddDataToUI(rg.gt.Game, "Game", _gametype);
                AddDataToUI(rg.gt.Map, "Map", _gametype);
                AddDataToUI(rg.gt.playerratings, "Player Ratings", _gametype);
                // Add conditions to the UI
                AddDataToUI(rg.gt.conditions, "Conditions", _gametype);

            }
        }

        private ScriptedPlayerTraitsViewModel PopulateScriptedPlayerTraitsViewModel(List<ScriptedPlayerTraits> scriptedPlayerTraits)
        {
            ScriptedPlayerTraitsViewModel viewModel = new()
            {
                Count = scriptedPlayerTraits.Count
            };

            foreach (var trait in scriptedPlayerTraits)
            {
                if (trait == null) continue; // Skip null entries

                ScriptedPlayerTraitItemViewModel itemViewModel = new(trait)
                {
                    String1 = trait.String1,
                    String2 = trait.String2,
                    PlayerTraits = new PlayerTraitsViewModel(trait.PlayerTraits)
                };

                if (trait.H2AH4 != null && trait.H2AH4.hidden != null)
                {
                    itemViewModel.Hidden = trait.H2AH4.hidden;
                }

                viewModel.PlayerTraitsItems.Add(itemViewModel);
            }

            return viewModel;
        }

        private void ConfigureSyntaxHighlighting()
        {
            // Check if the ScriptInputTextEditor is properly initialized
            if (ScriptInputTextEditor == null)
            {
                Debug.WriteLine("ScriptInputTextEditor is null.");
                return;
            }

            // Attempt to load the syntax highlighting definition
            using (var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("UniversalGametypeEditor.Csharp-Mode.xshd"))
            {
                if (stream == null)
                {
                    Debug.WriteLine("Resource stream for CSharp-Mode.xshd not found.");
                    return;
                }

                using (var reader = new XmlTextReader(stream))
                {
                    ScriptInputTextEditor.SyntaxHighlighting = HighlightingLoader.Load(reader, HighlightingManager.Instance);
                }
            }
        }


        private void CompileScript_Click(object sender, RoutedEventArgs e)
        {
            string script = ScriptInputTextEditor.Text;
            CompileScript(rg.gt.scriptOffset, script);
        }


        private void CompileScript(int bitOffset, string script)
        {

           
            ScriptCompiler sc = new();
            string binaryOutput = sc.CompileScript(script);

            // Read the file at offset 0x2F0
            string filePath = $"{Settings.Default.FilePath}\\{Settings.Default.Selected}";
            byte[] fileBytes = File.ReadAllBytes(filePath);
            int offset = 0x2F0;
            byte[] scriptBytes = fileBytes.Skip(offset).ToArray();

            // Convert the read bytes to a binary string
            string fileBinaryString = string.Join("", scriptBytes.Select(b => Convert.ToString(b, 2).PadLeft(8, '0')));

            // Get the bit position from rg.gt.scriptOffset
            int scriptBitOffset = rg.gt.scriptOffset;

            // Set a breakpoint here to inspect the binary string at the scriptOffset
            string binaryStringAtOffset = fileBinaryString.Substring(scriptBitOffset, binaryOutput.Length);
            Debug.WriteLine($"Binary string at scriptOffset: {binaryStringAtOffset}");

            // Insert the binary output at the specified bit position
            string modifiedBinaryString = fileBinaryString.Substring(0, scriptBitOffset) +
                                          binaryOutput +
                                          fileBinaryString.Substring(scriptBitOffset + binaryOutput.Length);

            // Convert the modified binary string back to bytes
            byte[] modifiedBytes = Enumerable.Range(0, modifiedBinaryString.Length / 8)
                                             .Select(i => Convert.ToByte(modifiedBinaryString.Substring(i * 8, 8), 2))
                                             .ToArray();

            // Write the modified bytes back to the file
            byte[] newFileBytes = new byte[offset + modifiedBytes.Length];
            Array.Copy(fileBytes, 0, newFileBytes, 0, offset);
            Array.Copy(modifiedBytes, 0, newFileBytes, offset, modifiedBytes.Length);
            File.WriteAllBytes(filePath, newFileBytes);
        }


        List<ReadGametype.Gametype> gametypeItems = new();
        private void Decompile(object name)
        {
            // Invoke dispatcher
            Dispatcher.Invoke(() =>
            {
                Gametype.Clear();
                LoadGametype.Visibility = Visibility.Visible;

                string filePath = $"{Settings.Default.FilePath}\\{name}";
                try
                {
                    rg.ReadBinary(filePath);
                }
                catch (Exception ex)
                {
                    ReadGametype.gametypeItems.Add(rg.gt);
                }

                try
                {
                    ReadGT = rg.gt;
                    
                    gametypeItems.AddRange(ReadGametype.gametypeItems);
                    ReadGametype.gametypeItems.Clear();

                    ObservableCollection<FileHeader> items = new();

                    DeserializeAndAddToUI<FileHeader, FileHeaderViewModel>(rg.gt.FileHeader, "File Header", Gametype);
                    DeserializeAndAddToUI<GametypeHeader, GametypeHeaderViewModel>(rg.gt.GametypeHeader, "Gametype Header", Gametype);

                    if (Settings.Default.ConvertToForge && viewModel != null)
                    {
                        viewModel.VariantType = (ReadGametype.VariantTypeEnum)1;
                    }

                    LoadSettings();
                }
                catch (Exception ex)
                {
                    Debug.WriteLine(ex.Message);
                }

                GametypeScroller.ItemsSource = Gametype;
            });
        }


        private bool IsString(Type fieldType) { return fieldType != typeof(string); }

        private async void FilesListWatched_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            //GametypeScroller.DataContext = null;
            //GametypeScroller.Children.Clear();
    
            if (e.AddedItems?.Count != 0 && e.AddedItems[0].ToString().EndsWith("bin"))
            {
                //GametypeScroller.Children.Clear();
                
                Settings.Default.Selected = e.AddedItems[0].ToString();
                Settings.Default.Save();
                Decompile(e.AddedItems[0]);

                //Take the rg.gt instance and serialize it as JSON
                //string json = JsonConvert.SerializeObject(gametypeItems, Formatting.Indented);
                //Debug.WriteLine(json);

                //Now we have a JSON object that should eventually be organized with only relevant data
                //We can use this to create a new list of objects that will be used to populate the gametype scroller

                //foreach (var item in gametypeItems)
                //{
                //    foreach (var inner in new object[] { item.FileHeader, item.GametypeHeader, item.ModeSettings, item.SpawnSettings, item.GameSettings, item.PowerupTraits, item.TeamSettings, item.loadoutCluster, item.scriptedPlayerTraits, item.scriptOptions, item.Strings, item.Game, item.Map, item.playerratings })
                //    {
                //          foreach (var value in inner.GetType().GetFields(BindingFlags.Public | BindingFlags.Instance))
                //        {

                //            //Check if the value is a class and not a string
                //            if (value.FieldType.IsClass && !value.FieldType.IsPrimitive && !value.FieldType.IsEnum && !value.FieldType.IsPointer && !value.FieldType.FullName.Equals(typeof(string).FullName))
                //            {
                //                if (inner == null)
                //                {
                //                    return;
                //                }
                //                DropDown dropDown = new();
                //                dropDown.Expander.Header = value.Name;
                //                foreach (var innerValue in value.FieldType.GetFields(BindingFlags.Public | BindingFlags.Instance))
                //                {

                //                    await Task.Run(() =>
                //                    {
                //                        try
                //                        {
                //                            _ = Dispatcher.BeginInvoke((Action)delegate ()
                //                        {
                //                            GametypeData gd = new();


                //                            var isNull = value.GetValue(inner);
                //                            if (isNull == null)
                //                            {
                //                                return;
                //                            }
                //                            var val2 = innerValue.GetValue(value.GetValue(inner));


                //                            if (val2 != null)
                //                            {
                //                                gd.value.Text = val2.ToString();
                //                                gd.value_name.Text = innerValue.Name;
                //                            }
                //                            else
                //                            {
                //                                gd.value.Text = "????";
                //                            }
                //                            dropDown.DropdownData.Children.Add(gd);

                //                        });
                //                        }
                //                        catch (Exception ex)
                //                        {
                //                            return;
                //                        }
                //                        Thread.Sleep(1);
                //                    });
                //                }
                //                if (dropDown.DropdownData.Children.Count == 0)
                //                {
                //                    continue;
                //                }
                //                Gametype.Add(dropDown);

                //            }
                //            else
                //            {
                //                GametypeData gd = new();
                //                var val = value.GetValue(inner);

                //                if (val != null)
                //                {
                //                    gd.value.Text = val.ToString();
                //                    gd.value_name.Text = value.Name;
                //                }
                //                else
                //                {
                //                    gd.value.Text = "????";
                //                }
                //                Gametype.Add(gd);
                //            }
                //        }
                //    }
                //}






                //GametypeScroller.ItemsSource = Gametype;

                //Create a new list and assign it the values of the gametypeItems list







                //foreach (var item in gametypeItems)
                //{
                //    foreach (var inner in new object[] { item.FileHeader, item.GametypeHeader, item.ModeSettings, item.SpawnSettings, item.GameSettings, item.PowerupTraits, item.TeamSettings, item.loadoutCluster, item.scriptedPlayerTraits, item.scriptOptions, item.Strings, item.Game, item.Map, item.playerratings })
                //    {


                //        foreach (var value in inner.GetType().GetFields(BindingFlags.Public | BindingFlags.Instance))
                //        {

                //            //Check if the value is a struct
                //            if (value.FieldType.IsValueType && !value.FieldType.IsPrimitive && !value.FieldType.IsEnum && !value.FieldType.IsPointer)
                //            {
                //                DropDown dropDown = new();
                //                dropDown.Expander.Header = value.Name;
                //                foreach (var innerValue in value.FieldType.GetFields(BindingFlags.Public | BindingFlags.Instance))
                //                {
                //                    await Task.Run(() =>
                //                    {
                //                        Dispatcher.BeginInvoke((Action)delegate ()
                //                        {
                //                            GametypeData gd = new();
                //                            var val = innerValue.GetValue(value.GetValue(inner));


                //                            if (val != null)
                //                            {
                //                                gd.value_name.Text = innerValue.Name;
                //                                gd.value.Text = val.ToString();
                //                            }
                //                            else
                //                            {
                //                                gd.value.Text = "????";
                //                                //return;
                //                            }
                //                            dropDown.DropdownData.Children.Add(gd);
                //                        });
                //                        Thread.Sleep(1);
                //                    });
                //                }
                //                //Check if dropDown has any children
                //                if (dropDown.DropdownData.Children.Count == 0)
                //                {
                //                    continue;
                //                }
                //                Gametype.Add(dropDown);
                //            }
                //            else
                //            {
                //                GametypeData gd = new();
                //                var val = value.GetValue(inner);
                //                gd.value_name.Text = value.Name;

                //                if (val != null)
                //                {
                //                    gd.value.Text = val.ToString();
                //                }
                //                else
                //                {
                //                    gd.value.Text = "????";
                //                }
                //                Gametype.Add(gd);
                //            }

                //        }
                //        GametypeScroller.ItemsSource = Gametype;

                //    }
                //}

            }
            else
            {
                LoadGametype.Visibility = Visibility.Collapsed;
                //MetaName.Text = "";
                //MetaDesc.Text = "";
            }

        }

        private void HandleLoadClick(object sender, RoutedEventArgs e)
        {
            GameSelector.SelectedIndex = Settings.Default.DecompiledVersion;
            Thread.Sleep(10);
            HandleFiles((string)FilesListWatched.SelectedValue, Settings.Default.FilePath, WatcherChangeTypes.Changed, false);
        }
        public void SkipTutorial(object sender, RoutedEventArgs e)
        {
            Settings.Default.TutorialFinished = true;
            Settings.Default.Save();
            Tutorial.IsOpen = false;
            FullWindow.Opacity = 1;
        }

        public int tutStep = 0;
        public void AdvanceTutorial(object sender, RoutedEventArgs e)
        {
            tutStep += 1;
            Watched.Opacity = 1;
            Game.Opacity = 1;
            Tutorial.VerticalOffset = 100;
            if (tutStep == 1)
            {
                McTextBlock.Text = "To begin, set the path to the folder you wish to watch for file changes.";
                Tutorial.Margin = new Thickness(100, 0, 0, 0);
                FileMenu.IsSubmenuOpen = true;
                Watched.Opacity = 0.5;
            }
                
            if (tutStep == 2)
            {
                McTextBlock.Text = "Alternatively, select the path to your game files to use the built-in game variant path.";
                FileMenu.IsSubmenuOpen = true;
                Game.Opacity = 0.5;
            }

            if (tutStep == 3)
            {
                McTextBlock.Text = "Change any settings according to your preferences using the settings menu.";
                Set.IsSubmenuOpen = true;
                Tutorial.PlacementTarget = Set;
                Tutorial.VerticalOffset = 200;
            }

            if (tutStep == 4)
            {
                FullWindow.Opacity = 1;
                McTextBlock.Text = "Select a .bin or .mglo file on the left column to convert and/or copy it to the Hot Reload folder.";
                //System.Windows.Media.Color col = (System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString("gray");
                //FilesListWatched.Background = new SolidColorBrush(col);
                FilesListWatched.Opacity = 1;
                // Create a new SolidColorBrush with the starting color
                SolidColorBrush brush = new((System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString("#3D3D3D"));

                // Apply the brush to the FilesListWatched element
                FilesListWatched.Background = brush;

                // Create a new ColorAnimation object
                ColorAnimation animation = new()
                {
                    // Set the animation properties
                    From = Colors.Gray,
                    To = (System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString("#3D3D3D"),
                    Duration = new Duration(TimeSpan.FromSeconds(1)),
                    AutoReverse = true,
                    FillBehavior = FillBehavior.Stop
                };

                // Apply the animation to the Color property of the SolidColorBrush
                brush.BeginAnimation(SolidColorBrush.ColorProperty, animation);
                Tutorial.PlacementTarget = FilesListWatched;
                Tutorial.Placement = System.Windows.Controls.Primitives.PlacementMode.Top;
                Tutorial.VerticalOffset = -20;
            }

            if (tutStep == 5)
            {
                Tutorial.Placement = System.Windows.Controls.Primitives.PlacementMode.Bottom;
                McTextBlock.Text = "Select recently watched directories using the dropdown menu.";
                Tutorial.PlacementTarget = DirHistory;
                Tutorial.VerticalOffset = 0;

                // Create a new SolidColorBrush with the starting color
                SolidColorBrush brush = new((System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString("#3D3D3D"));

                // Create a new Style for the ComboBoxItem
                Style itemContainerStyle = new Style(typeof(ComboBoxItem));

                // Create a new Setter for the Background property
                Setter backgroundSetter = new();
                backgroundSetter.Property = ComboBoxItem.BackgroundProperty;
                backgroundSetter.Value = brush;

                // Add the Setter to the Style
                itemContainerStyle.Setters.Add(backgroundSetter);

                // Apply the Style to the ItemContainerStyle property of the ComboBox
                DirHistory.ItemContainerStyle = itemContainerStyle;

                // Create a new ColorAnimation object
                ColorAnimation animation = new()
                {
                    // Set the animation properties
                    From = Colors.Gray,
                    To = (System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString("#3D3D3D"),
                    Duration = new Duration(TimeSpan.FromSeconds(1)),
                    AutoReverse = true,
                    FillBehavior = FillBehavior.Stop
                };

                // Apply the animation to the Color property of the SolidColorBrush
                //brush.BeginAnimation(SolidColorBrush.ColorProperty, animation); //Sealed or frozen sometimes. Need to investigate to make animation work correctly.
            }

            if (tutStep == 6)
            {
                FullWindow.Opacity = 1;
                McTextBlock.Text = "Create, manage, and save your CGB playlists using the Tools Menu";
                //System.Windows.Media.Color col = (System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString("gray");
                //FilesListWatched.Background = new SolidColorBrush(col);
                FilesListWatched.Opacity = 1;
                

                
                Tutorial.PlacementTarget = Tools;
                Tools.IsSubmenuOpen = true;
                //Tutorial.Placement = System.Windows.Controls.Primitives.PlacementMode.Top;
                Tutorial.VerticalOffset = 20;
            }

            if (tutStep == 7)
            {
                Tutorial.Placement = System.Windows.Controls.Primitives.PlacementMode.Bottom;
                Tutorial.VerticalOffset = 0;
                McTextBlock.Text = "Happy Gametyping!";
                NextFinish.Content = "Finish";
                Skip.Height = 0;
                Tutorial.PlacementTarget = Menu;
            }

            if (tutStep == 8)
            {
                ResetTutorial();
            }
        }

        public void ResetTutorial()
        {
            Skip.Height = 20;
            Tutorial.PlacementTarget = Menu;
            NextFinish.Height = 20;
            Tutorial.VerticalOffset = 0;
            McTextBlock.Text = "Welcome to Universal Gametype Editor!";
            NextFinish.Content = "Next";
            tutStep = 0;
            Tutorial.IsOpen = false;
            FullWindow.Opacity = 1;
            Settings.Default.TutorialFinished = true;
            Settings.Default.Save();
        }

        public void CheckTutorialCompletion()
        {
            if (Settings.Default.TutorialFinished == true)
            {
                Tutorial.IsOpen = false;
                FullWindow.Opacity = 1;
            } else
            {
                ResetTutorial();
                Tutorial.IsOpen = true;
                FullWindow.Opacity = 0.4;
            }
        }

        public void ShowTutorial(object sender, RoutedEventArgs e)
        {
            Settings.Default.TutorialFinished = false;
            CheckTutorialCompletion();
        }

        public void EditPlaylist(object sender, RoutedEventArgs e)
        {
            PlaylistEditor pe = new();
            pe.Show();
        }

        public void UpdateDirHistoryComboBox()
        {
            if (Settings.Default.FilePathList != null)
            {
                if (Settings.Default.FilePathList.Count == 0)
                {
                    DirHistory.Visibility = Visibility.Collapsed;
                } else
                {
                    DirHistory.ItemsSource = dirHistory;
                    foreach (string? item in Settings.Default.FilePathList)
                    {
                        folders.Add(item);
                        dirHistory.Add(item);
                    }
                    DirHistory.Text = Settings.Default.FilePath;
                }
            } else
            {
                DirHistory.Visibility = Visibility.Collapsed;
            }
        }

        private void SortBySelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (SortBy.SelectedIndex == 0)
            {
                Settings.Default.OrderBy = 0;
            }
            if (SortBy.SelectedIndex == 1)
            {
                Settings.Default.OrderBy = 1;
            }
            if (SortBy.SelectedIndex == 2)
            {
                Settings.Default.OrderBy = 2;
            }
            Settings.Default.Save();
            if (Settings.Default.HotReloadPath != "Undefined")
            {
                GetFiles(Settings.Default.HotReloadPath, HotReloadFilesList);
            }
                
            if (Settings.Default.FilePath != "Undefined")
            {
                GetFiles(Settings.Default.FilePath, WatchedFilesList);
            }
                
        }

        public void DirHistorySelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            Settings.Default.FilePath = (string)e.AddedItems[0];
            Settings.Default.Save();
            RegisterWatcher(Settings.Default.FilePath, watcher);
            System.Windows.Application.Current.Dispatcher.Invoke(new Action(() =>
                UpdateFilePathListView((string)e.AddedItems[0])
            ));
        }

        ObservableCollection<FileInfo> filesCollection = new ObservableCollection<FileInfo>();
        List<FileInfo> fileEntries = new List<FileInfo>();
        public void GetFiles(string dirName, ObservableCollection<string> collection)
        {
            filesCollection.Clear();
            fileEntries.Clear();
            
            foreach (string filename in Directory.GetFiles(dirName))
            {
                fileEntries.Add(new FileInfo(filename));
            }
            if (Settings.Default.OrderBy == 2)
            {
                fileEntries = fileEntries.OrderByDescending(f => f.LastWriteTime).ToList();
            }
            if (Settings.Default.OrderBy == 1)
            {
                fileEntries = fileEntries.OrderByDescending(name => name.Name).ToList();
            }
            collection.Clear();
            foreach (FileInfo file in fileEntries)
            {
                filesCollection.Add(file);
            }
            foreach (FileInfo fileInfo in filesCollection)
            {
                collection.Add(fileInfo.Name);
            }
        }

        public void UpdateSettingsFromFile()
        {
            ConvertBin.IsChecked = Settings.Default.ConvertBin;
            Transparency.IsChecked = Settings.Default.Opacity;
            PlayBeep.IsChecked = Settings.Default.PlayBeep;
            SwitchWatched.IsChecked = Settings.Default.SwitchWatched;
            AlwaysOnTop.IsChecked = Settings.Default.AlwaysOnTop;
            KeepNamedMglo.IsChecked = Settings.Default.KeepNamedMglo;
            SortBy.SelectedIndex = Settings.Default.OrderBy;
            ConvertToForge.IsChecked = Settings.Default.ConvertToForge;
            MultiDirectory.IsChecked = Settings.Default.MultiDirectory;
        }
        private FileSystemWatcher watcher = new();
        private void UpdateWatchMulti(object sender, RoutedEventArgs e)
        {
            if (MultiDirectory.IsChecked == true)
            {
                Settings.Default.MultiDirectory = true;
                RegisterWatchers(Settings.Default.FilePathList);
            } else
            {
                Settings.Default.MultiDirectory = false;
                UnregisterWatchers();
                RegisterWatcher(Settings.Default.FilePath, watcher);
            }
            Settings.Default.Save();
        }

        public void UpdateNamedMglo(object sender, RoutedEventArgs e)
        {
            if (KeepNamedMglo.IsChecked)
            {
                Settings.Default.KeepNamedMglo = true;
            } else
            {
                Settings.Default.KeepNamedMglo = false;
            }
            Settings.Default.Save();
        }

        public void UpdateConvertForge(object sender, RoutedEventArgs e)
        {
            if (ConvertToForge.IsChecked)
            {
                Settings.Default.ConvertToForge = true;
            }
            else
            {
                Settings.Default.ConvertToForge = false;
            }
            Settings.Default.Save();
        }

        public void UpdatePlayBeep(object sender, RoutedEventArgs e)
        {
            if (PlayBeep.IsChecked)
            {
                Settings.Default.PlayBeep = true;
            }
            else
            {
                Settings.Default.PlayBeep = false;
            }
            Settings.Default.Save();
        }

        public void CheckTransparency(object sender, RoutedEventArgs e)
        {
            if (Transparency.IsChecked)
            {
                Settings.Default.Opacity = true;
                Opacity = 0.9;
            } else
            {
                Settings.Default.Opacity = false;
                Opacity = 1;
            }
            Settings.Default.Save();
        }

        private static int CheckLineLen(string text)
        {
            string check = text;
            int numberOfNewLines = check.Split('\n').Length - 1;
            return numberOfNewLines;
        }


        private void OnScroll(object sender, System.Windows.Controls.Primitives.ScrollEventArgs e)
        {
            System.Windows.Controls.Primitives.ScrollBar sb = (System.Windows.Controls.Primitives.ScrollBar)sender;
            (sb.Tag as ScrollViewer)?.ScrollToHorizontalOffset(e.NewValue);
        }





        public void UpdateLastEvent(string e)
        {
            System.Windows.Application.Current.Dispatcher.BeginInvoke(new Action(() =>
            {
                //Get current time
                string now = DateTime.Now.ToString("h:mm:ss");
                TextBlock newTextBlock = new TextBlock
                {
                    Foreground = new SolidColorBrush(System.Windows.Media.Colors.White),
                    Text = $"[{now}] {e}",
                    FontSize = 12,
                    FontWeight = FontWeights.Bold,
                    TextWrapping = TextWrapping.Wrap
                };
                LastEvent.Children.Add(newTextBlock);
                EventViewer.LayoutUpdated += (sender, e) =>
                {
                    EventViewer.ScrollToVerticalOffset(EventViewer.ExtentHeight);
                };
                if (LastEvent.Children.Count > 10)
                {
                    LastEvent.Children.RemoveAt(0);
                }
            }));
        }

        private void CheckConvertBin(object sender, RoutedEventArgs e)
        {
            Settings.Default.ConvertBin = ConvertBin.IsChecked;
            Settings.Default.Save();
        }

        public void HandleExitClick(object sender, RoutedEventArgs e)
        {
            Close();
        }




        public void HandleOpenClick(object sender, RoutedEventArgs e)
        {
            OpenFile();
        }

        public void HandleSetHotReload(object sender, RoutedEventArgs e)
        {

            OpenFolder("Hot Reload");

        }


        public void OpenFile()
        {
            var filePath = String.Empty;
            var fileContent = String.Empty;
            System.Windows.Forms.OpenFileDialog openFile = new()
            {
                InitialDirectory = "C:\\",
                Filter = "txt files (*.txt)|binary files (*.bin)|megalo files (*.mglo)|*.txt|All Files (*.*)|(*.*)"
            };

            if (openFile.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                filePath = openFile.FileName;
                var fileStrem = openFile.OpenFile();
                using (StreamReader reader = new(fileStrem))
                {
                    fileContent = reader.ReadToEnd();
                }
            }
        }

        public void WindowDeactivated(object sender, EventArgs e)
        {
            System.Windows.Window window = (System.Windows.Window)sender;
            if (AlwaysOnTop.IsChecked == true)
            {
                window.Topmost = true;
            }

            if (AlwaysOnTop.IsChecked == false)
            {
                window.Topmost = false;
            }
        }
        public void UpdateOnTop(object sender, RoutedEventArgs e)
        {
            
            if (AlwaysOnTop.IsChecked == true)
            {
                Settings.Default.AlwaysOnTop = true;
            }

            if (AlwaysOnTop.IsChecked == false)
            {
                Settings.Default.AlwaysOnTop = false;
            }
            Settings.Default.Save();
        }

        private void HandleSetDirClick(object sender, RoutedEventArgs e)
        {
            OpenFolder("File Path");
        }

        public void UpdateSwitchWatched(object sender, RoutedEventArgs e)
        {
            if (SwitchWatched.IsChecked)
            {
                Settings.Default.SwitchWatched = true;
            } else
            {
                Settings.Default.SwitchWatched = false;
            }
            Settings.Default.Save();
        }

        public void FocusWindow(object sender, RoutedEventArgs e)
        {
            GetProcess.SendKey();
            Debug.WriteLine("Sent Key!");
        }

        
        public void OpenFolder(string path)
        {
            string? folderName;
            UpdateLastEvent("Setting Directory");
            using var dialog = new FolderBrowserDialog();
            DialogResult result = dialog.ShowDialog();

            if (result == System.Windows.Forms.DialogResult.OK)
            {
                UpdateLastEvent("Set Directory");
                folderName = dialog.SelectedPath;

                if (path == "Hot Reload")
                {
                    var userFolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);
                    dialog.InitialDirectory = $"{userFolder}\\AppData\\LocalLow\\MCC\\Temporary\\";
                    Settings.Default.HotReloadPath = folderName;
                    //HotReloadDir.Text = folderName;
                    Settings.Default.Save();
                    RegisterHRWatcher(Settings.Default.HotReloadPath, hrWatcher);
                }

                if (path == "File Path")
                {
                    Settings.Default.FilePath = folderName;
                    folders.Add(folderName);
                    dirHistory.Add(folderName);
                    Settings.Default.FilePathList = folders;
                    DirHistory.Visibility = Visibility.Visible;
                    DirHistory.Text = Settings.Default.FilePath;
                    Settings.Default.Save();
                    WatchedFilesList.Clear();
                    GetFiles(folderName, WatchedFilesList);
                }
                if (path == "File Path")
                {
                    RegisterWatcher(folderName, watcher);
                }
                
                if (path == "Game")
                {
                    if (Path.GetFileName(folderName) != "Halo The Master Chief Collection")
                    {
                        UpdateLastEvent("Error: Invalid Game Directory");
                        Debug.WriteLine(Path.GetDirectoryName(folderName));
                        return;
                    }
                    Settings.Default.GameDir = folderName;
                    Settings.Default.Save();
                    UpdateLastEvent("Set Game Directory");
                    //DetectMenus($"{Settings.Default.GameDir}\\haloreach\\game_variants\\koth_054.bin", "Halo Reach");
                    //DetectMenus($"{Settings.Default.GameDir}\\groundhog\\game_variants\\H2A_100_150_Slayer_Pro_137.bin", "Halo 2 Anniversary");
                    //DetectMenus($"{Settings.Default.GameDir}\\halo4\\game_variants\\H4_CTF_132.bin", "Halo 4");
                }
            }
        }
  
        
        public void RegisterWatcher(string foldername, FileSystemWatcher watcher)
        {
            timer.Enabled = true;
            timer.Start();
            timer.Interval = 500;
            watcher.Path = foldername;

            watcher.NotifyFilter = NotifyFilters.Attributes
                                 | NotifyFilters.CreationTime
                                 | NotifyFilters.DirectoryName
                                 | NotifyFilters.FileName
                                 | NotifyFilters.LastWrite
                                 | NotifyFilters.Security
                                 | NotifyFilters.Size;

            watcher.Changed += new FileSystemEventHandler(OnChange);
            watcher.Created += new FileSystemEventHandler(OnChange);
            watcher.Deleted += new FileSystemEventHandler(OnChange);

            watcher.Filter = "*";
            watcher.IncludeSubdirectories = true;
            watcher.EnableRaisingEvents = true;

            //UpdateLastEvent("Listening For File Changes...");
        }

        private List<FileSystemWatcher> watchers = new List<FileSystemWatcher>();

        public void RegisterWatchers(StringCollection foldernames)
        {
            // Unregister any existing watchers
            UnregisterWatchers();
            if (foldernames != null)
            {
                foreach (var foldername in foldernames)
                {
                    var watcher = new FileSystemWatcher();
                    RegisterWatcher(foldername, watcher);
                    watchers.Add(watcher);
                }
            }
            
        }

        public void UnregisterWatchers()
        {
            foreach (var watcher in watchers)
            {
                watcher.EnableRaisingEvents = false;
                watcher.Dispose();
            }

            watchers.Clear();
        }




        #region WindowCommands
        private void CommandBinding_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;
        }

        // Minimize
        private void CommandBinding_Executed_Minimize(object sender, ExecutedRoutedEventArgs e)
        {
            SystemCommands.MinimizeWindow(this);
        }

        // Maximize
        private void CommandBinding_Executed_Maximize(object sender, ExecutedRoutedEventArgs e)
        {
            SystemCommands.MaximizeWindow(this);
        }

        // Restore
        private void CommandBinding_Executed_Restore(object sender, ExecutedRoutedEventArgs e)
        {
            SystemCommands.RestoreWindow(this);
        }
        // Close
        private void CommandBinding_Executed_Close(object sender, ExecutedRoutedEventArgs e)
        {
            SystemCommands.CloseWindow(this);
        }

        private void OnApplicationExit(object sender, ExitEventArgs e)
        {
            //overlay.UnregisterHotkey();
        }

        //Close all other windows when this window is closed
        private void MainWindow_Closed(object sender, EventArgs e)
        {
            System.Windows.Application.Current.Shutdown();
        }

        // State change
        private void MainWindowStateChangeRaised(object? sender, EventArgs e)
        {
            if (WindowState == WindowState.Maximized)
            {
                RestoreButton.Visibility = Visibility.Visible;
                MaximizeButton.Visibility = Visibility.Collapsed;
            }
            else
            {
                RestoreButton.Visibility = Visibility.Collapsed;
                MaximizeButton.Visibility = Visibility.Visible;
            }
        }
        #endregion

        FileSystemWatcher hrWatcher = new();

        public void RegisterHRWatcher(string foldername, FileSystemWatcher watcher)
        {
            timer.Enabled = true;
            timer.Start();
            timer.Interval = 500;
            watcher.Path = foldername;

            watcher.NotifyFilter = NotifyFilters.Attributes
                                 | NotifyFilters.CreationTime
                                 | NotifyFilters.DirectoryName
                                 | NotifyFilters.FileName
                                 | NotifyFilters.LastWrite
                                 | NotifyFilters.Security
                                 | NotifyFilters.Size;

            watcher.Changed += new FileSystemEventHandler(OnHRChange);
            watcher.Created += new FileSystemEventHandler(OnHRChange);
            watcher.Deleted += new FileSystemEventHandler(OnHRChange);

            watcher.Filter = "*";
            watcher.IncludeSubdirectories = true;
            watcher.EnableRaisingEvents = true;

            //UpdateLastEvent("Listening For File Changes...");
        }

        public void OnHRChange(object sender, FileSystemEventArgs e)
        {
            System.Windows.Application.Current.Dispatcher.Invoke(new Action(() =>
                UpdateHRListView(Settings.Default.HotReloadPath)
            ));
        }

        public void GameSelectorSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            int index = GameSelector.SelectedIndex;
            Settings.Default.GameIndex = index;
            _ = index == 0 ? Settings.Default.HotReloadPath = $"{Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)}\\AppData\\LocalLow\\MCC\\Temporary\\HaloReach\\HotReload" : "" ;
            _ = index == 1 ? Settings.Default.HotReloadPath = $"{Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)}\\AppData\\LocalLow\\MCC\\Temporary\\Halo4\\HotReload" : "";
            _ = index == 2 ? Settings.Default.HotReloadPath = $"{Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)}\\AppData\\LocalLow\\MCC\\Temporary\\Halo2A\\HotReload" : "";
            Settings.Default.Save();
            bool exists = Directory.Exists(Settings.Default.HotReloadPath);
            if (!exists)
            {
                Directory.CreateDirectory(Settings.Default.HotReloadPath);
            }
            RegisterHRWatcher(Settings.Default.HotReloadPath, hrWatcher);
            //if (HotReloadDir != null)
            //{
            //    HotReloadDir.Text = Settings.Default.HotReloadPath;
            //}
            HotReloadFilesList.Clear();
            GetFiles(Settings.Default.HotReloadPath, HotReloadFilesList);
        }


        public void SetGameFolder(object sender, RoutedEventArgs e)
        {
            OpenFolder("Game");
        }

        private async void MoveFile(string sourceFile, string destinationFile, string name)
        {
            try
            {
                string copyPath = Path.GetDirectoryName(destinationFile);
                string directory = Path.GetDirectoryName(sourceFile);
                bool success = false;
                int retryCount = 0;
                const int maxRetries = 5;
                const int delay = 100; // milliseconds

                while (!success && retryCount < maxRetries)
                {
                    try
                    {
                        if (File.Exists(destinationFile))
                        {
                            File.Delete(destinationFile);
                        }

                        using (FileStream sourceStream = File.Open(sourceFile, FileMode.Open, FileAccess.Read, FileShare.None))
                        {
                            using (FileStream destinationStream = File.Create(destinationFile))
                            {
                                copying = true;
                                await sourceStream.CopyToAsync(destinationStream);
                            }
                        }

                        success = File.Exists(destinationFile);
                        if (success)
                        {
                            File.Delete(sourceFile);
                            copying = false;

                            System.Windows.Application.Current.Dispatcher.Invoke(() =>
                            {
                                UpdateHRListView(Settings.Default.HotReloadPath);
                                UpdateFilePathListView(Settings.Default.FilePath);
                            });

                            if (Settings.Default.PlayBeep)
                            {
                                SystemSounds.Beep.Play();
                            }

                            if (Settings.Default.KeepNamedMglo)
                            {
                                if (File.Exists($"{copyPath}\\{name}"))
                                {
                                    File.Delete($"{copyPath}\\{name}");
                                    Thread.Sleep(15);
                                }
                                File.Copy($"{copyPath}\\.mglo", $"{copyPath}\\{name}");
                                System.Windows.Application.Current.Dispatcher.Invoke(() =>
                                {
                                    UpdateHRListView(Settings.Default.HotReloadPath);
                                });
                            }
                        }
                    }
                    catch (IOException ioex)
                    {
                        Debug.WriteLine("An IOException occurred during move, " + ioex.Message);
                        retryCount++;
                        Thread.Sleep(delay);
                    }
                    catch (Exception ex)
                    {
                        Debug.WriteLine("An Exception occurred during move, " + ex.Message);
                        break;
                    }
                }

                if (!success)
                {
                    Debug.WriteLine("Failed to move the file after multiple attempts.");
                }
            }
            catch (Exception ex)
            {
                Debug.WriteLine("An unexpected exception occurred, " + ex.Message);
            }
        }
        private string? convertedBin;
        private string? convertedMglo;
        public void HandleFiles(string name, string path, WatcherChangeTypes changeType, bool setDirectory)
        {
            
            if (copying)
            {
                return;
            }

            if (changeType == WatcherChangeTypes.Deleted)
            {
                System.Windows.Application.Current.Dispatcher.Invoke(new Action(() =>
                    UpdateFilePathListView(Settings.Default.FilePath)
                ));
                System.Windows.Application.Current.Dispatcher.Invoke(new Action(() =>
                    UpdateHRListView(Settings.Default.HotReloadPath)
                ));
                if (File.Exists($"{path}") == false)
                {
                    return;
                }
            }

            string? directory;
            string? fullPath;

            if (path == Settings.Default.HotReloadPath)
            {
                if (name.EndsWith(".mglo") && !name.Equals(".mglo"))
                {
                    convertedBin = $"{name.Replace(".mglo", "")}_mod.bin";
                    ConvertToBin(path, name);
                    MoveFile($"{path}\\{name.Replace(".mglo", "")}_mod.bin", $"{Settings.Default.FilePath}\\{name.Replace(".mglo", "")}_mod.bin", name);
                    UpdateHRListView(path);
                } else
                {
                    UpdateLastEvent("Error: File is not of type 'mglo' ");
                }
                
                return;
            }
      
            if (changeType != WatcherChangeTypes.Changed)
            {
                //UpdateLastEvent($"Created: {name}");
            }

            if (name.Contains(".bin") && !name.EndsWith(".bin"))
            {
                name = Regex.Replace(name, @"(.*)\..*", "$1");
                Thread.Sleep(50);
            }

            if (setDirectory)
            {
                fullPath = Path.GetDirectoryName(path) + "\\" + name;
                directory = Path.GetDirectoryName(path);
            } else
            {
                directory = path;
                fullPath = path + "\\" + name;
            }
                

            //UpdateLastEvent($"Modified: {name}");
            

            
            if (Settings.Default.HotReloadPath == "Undefined")
            {
                UpdateLastEvent("Error: Hot Reload Path Not Set");
                return;
            }
            var copyPath = Settings.Default.HotReloadPath;

             bool exists = Directory.Exists(copyPath);
             if (!exists)
            {
                Directory.CreateDirectory(copyPath);
            }

            

            if (name.EndsWith(".bin") && Settings.Default.ConvertBin)
            {
                if (name == convertedBin)
                {
                    return;
                }
                convertedBin = "";
                if (Settings.Default.ConvertToForge)
                {
                    Settings.Default.Selected = name;
                    Settings.Default.FilePath = directory;
                    Decompile(name);
                    CompileVariant();
                    UpdateLastEvent($"Converted: {name} to Forge Variant Type");
                    convertedBin = name;
                    if (Settings.Default.GameDir != "Undefined")
                    {
                        if (Settings.Default.DecompiledVersion == 0)
                        {
                            //Copy file to Halo Reach
                            try
                            {
                                File.Copy($"{fullPath}", $"{Settings.Default.GameDir}\\haloreach\\game_variants\\{name}", true);
                                UpdateLastEvent($"Copied: {name} to the H:R Folder");
                            } catch { }
                                
                        }
                        if (Settings.Default.DecompiledVersion == 1)
                        {
                            //Copy file to Halo 4
                            File.Copy($"{fullPath}", $"{Settings.Default.GameDir}\\halo4\\game_variants\\{name}", true);
                            UpdateLastEvent($"Copied: {name} to the H4 Folder");
                        }
                        if (Settings.Default.DecompiledVersion == 2)
                        {
                            //Copy file to Halo 2 Anniversary
                            try
                            {
                                File.Copy($"{fullPath}", $"{Settings.Default.GameDir}\\groundhog\\game_variants\\{name}", true);

                                UpdateLastEvent($"Copied: {name} to the H2A Folder");
                            }
                            catch (Exception ex)
                            {
                                UpdateLastEvent($"Error: {ex.Message}");
                            }
                        }
                    }
                    
                    Dispatcher.BeginInvoke((Action)delegate ()
                    {
                        Settings.Default.FilePath = DirHistory.Text;
                        Gametype.Clear();
                    });
                }
                
                ConvertToMglo(name, directory);
            }



            if (name.EndsWith(".bin") == false)
            {
                if (convertedMglo == name)
                {
                    return;
                }
                convertedMglo = name;
                Debug.WriteLine(name);
                MoveFile($"{fullPath}", $"{copyPath}\\.mglo", name);
                //File.Copy($"{copyPath}\\{name}", $"{copyPath}\\.mglo", true);
                
                
                UpdateLastEvent($"Copied: {name} to the HotReload Folder");
                Task.Delay(100).ContinueWith(_ =>
                {
                    convertedBin = string.Empty;
                    convertedMglo = string.Empty;
                });
            }
            
        }

        private void OnChange(object sender, FileSystemEventArgs e)
        {

            //using (MemoryStream ms = new MemoryStream(sound))
            //{
            //    // Construct the sound player
            //    SoundPlayer player = new(ms);
            //    player.Play();
            //}
            if (e.Name.EndsWith("mglo") || e.Name.EndsWith("bin"))
            {
                HandleFiles(e.Name, e.FullPath, e.ChangeType, true);
            }
            
        }

        public void UpdateFilePathListView(string filePath)
        {
            WatchedFilesList.Clear();
            GetFiles(filePath, WatchedFilesList);
        }

        public void UpdateHRListView(string copyPath)
        {
            HotReloadFilesList.Clear();
            GetFiles(copyPath, HotReloadFilesList);
        }

        Stopwatch sw = new();



        public void CheckForUpdates(object sender, RoutedEventArgs e)
        {
            //Check for recent commits on GitHub
            //If there are recent commits, display a message box asking if the user would like to download the latest version
            //If the user clicks yes, open the link to the GitHub repo and download the latest version

            //Get recent commits from GitHub
            string commits = "";
            string node_id;
            string date;
            try
            {

                using (WebClient client = new WebClient())
                {
                    client.Headers.Add("user-agent", "request");
                    commits = client.DownloadString("https://api.github.com/repos/Sopitive/UniversalGametypeEditor/commits/master");
                    Debug.WriteLine("Commits: " + commits);
                    //parse the json and set node_id to the value of the node_id field
                    JObject json = JObject.Parse(commits);
                    node_id = (string)json["node_id"];
                    date = (string)json["commit"]["author"]["date"];
                    Debug.WriteLine(DateTime.Parse(date));
                    if (DateTime.Parse(date) > DateTime.UtcNow.AddMinutes(-15))
                    {
                        Debug.WriteLine("Update Available, Still Proceessing...");
                        UpdateLastEvent("Update Available, but is still building. Try again later.");
                        return;
                    }
                    Debug.WriteLine("Node ID: " + node_id);
                }
                if (Settings.Default.Version == "")
                {
                    Settings.Default.Version = node_id;
                    Settings.Default.Save();
                    return;
                }
            }
            catch (Exception)
            {
                Debug.WriteLine("API Fail");
                UpdateLastEvent("Unable to check for updates. Please check your internet connection.");
                return;
            }
            string storedVersion;
            try
            {
                //Get the stored version number from the settings file
                storedVersion = Settings.Default.Version;
                Debug.WriteLine("Stored version: " + storedVersion);
            }
            catch (Exception)
            {
                UpdateLastEvent("Unable to check for updates. Please check your internet connection.");
                return;
            }
            //Compare the two and if the stored version is less than the current version, display a message box asking if the user would like to download the latest version
            if (storedVersion != node_id)

                
            {
                DialogResult result = System.Windows.Forms.MessageBox.Show("A new version is available. Would you like to download the latest version?", "Update Available", MessageBoxButtons.YesNoCancel);
                if (result == System.Windows.Forms.DialogResult.Yes)
                {
                    UpdateLastEvent("Downloading latest version...");
                    //Download the file
                    try
                    {
                        using (WebClient client = new WebClient())
                        {
                            sw.Start();
                            UpdateLastEvent("Discovering File Size...");
                            client.DownloadProgressChanged += (s, e) =>
                            {
                                string downloadedMBs = Math.Round(e.BytesReceived / 1024.0 / 1024.0) + " MB";
                                string downloadSpeed = string.Format("{0} MB/s", (e.BytesReceived / 1024.0 / 1024.0 / sw.Elapsed.TotalSeconds).ToString("0.00"));
                                UpdateLastEvent($"Downloading... {downloadedMBs} @ {downloadSpeed}");
                            };
                            client.DownloadFileCompleted += (s, e) =>
                            {
                                sw.Stop();
                                UpdateLastEvent("Download Complete");
                                // any other code to process the file
                                // Write the node id to the settings file
                                Settings.Default.Version = node_id;
                                Settings.Default.Save();
                                // Move the zip file and the bat file up one directory and overwrite the existing files
                                File.Copy("UniversalGametypeEditor.zip", "..\\UniversalGametypeEditor.zip", true);
                                File.Copy("unzip.bat", "..\\unzip.bat", true);
                                Thread.Sleep(1000);

                                // Check if the batch file exists
                                string batchFilePath = Path.GetFullPath("..\\unzip.bat");
                                if (File.Exists(batchFilePath))
                                {
                                    UpdateLastEvent("unzip.bat file found. Starting the process...");

                                    // Start the unzip.bat file
                                    ProcessStartInfo startInfo = new()
                                    {
                                        FileName = batchFilePath,
                                        WorkingDirectory = Path.GetFullPath("..") // Set the working directory to the parent directory
                                                                                  // Arguments = "UniversalGametypeEditor.zip"
                                    };

                                    Process process = Process.Start(startInfo);

                                    if (process != null)
                                    {
                                        UpdateLastEvent("unzip.bat started successfully. Exiting the application...");
                                        // Close the current process
                                        Environment.Exit(0);
                                    }
                                    else
                                    {
                                        UpdateLastEvent("Failed to start unzip.bat.");
                                    }
                                }
                                else
                                {
                                    UpdateLastEvent("unzip.bat file not found.");
                                }


                            };
                            //Download the file on a background thread
                            client.DownloadFileAsync(new Uri("https://nightly.link/Sopitive/UniversalGametypeEditor/workflows/dotnet-desktop/master/UniversalGametypeEditor.zip"), "UniversalGametypeEditor.zip");
                            while (client.IsBusy)
                            {
                                System.Windows.Forms.Application.DoEvents();
                            }

                        }
                    }
                    catch (Exception)
                    {
                        UpdateLastEvent("Unable to download the latest version. Please check your internet connection.");
                    }
                }
            }
            else
            {
                UpdateLastEvent("Client up to date!");
            }
            return;
        }

        public void ConvertToBin(string directory, string name)
        {
            bool fileLocked = true;
            byte[] fileBytes = new byte[0];
            int originalLength = 0;
            int length = 0;
            while (fileLocked)
            {
                try
                {
                    byte[] bytes = File.ReadAllBytes($"{directory}\\{name}");
                    fileBytes = new byte[bytes.Length];
                    fileBytes = bytes;
                    fileLocked = false;
                    originalLength = bytes.Length;
                    if (bytes.Length > 25000)
                    {
                        length = 31744;
                    }
                    else
                    {
                        length = 20480;
                    }
                } catch (IOException)
                {
                    fileLocked = true;
                    Debug.WriteLine("File still in use!");
                }
            }

            

            
            

            byte[] newArray = fileBytes;
            Array.Resize(ref newArray, length);

            Debug.WriteLine(newArray.Length);

            newArray = BitShift(originalLength, newArray);


            byte[] finalArray = { };
            Array.Resize(ref finalArray, header.Length + ender.Length + length);
            try
            {
                for (int i = 0; i < header.Length; i++)
                {
                    finalArray[i] = header[i];
                }
                
                int insertionIndex = header.Length;

                for (int i = 1; i < newArray.Length; i++)
                {
                    finalArray[(i - 1) + insertionIndex] = newArray[i];
                }
                
                insertionIndex += newArray.Length - 1;
                for (int i = 0; i < ender.Length; i++)
                {
                    finalArray[i + insertionIndex] = ender[i];
                }
                Debug.WriteLine("Test");
            } catch (IndexOutOfRangeException e)
            {
                Debug.WriteLine(e);
                //UpdateLastEvent($"Error While Converting File {name}");
                return;
            }
            fileLocked = true;
            while (fileLocked)
            {
                try
                {
                    File.WriteAllBytes($"{directory}\\{name.Replace(".mglo", "")}_mod.bin", finalArray);
                    fileLocked = false;
                }
                catch (IOException)
                {
                    fileLocked = true;
                    Debug.WriteLine("File still in use!");
                }
            }
            UpdateLastEvent($"Converted {name} to {name.Replace(".mglo", "")}.bin");
        }

        private void ConvertToMglo(string name, string directory)
        {
            byte[] fileBytes = {};
            bool fileLocked = true;
            while (fileLocked)
            {
                try
                {
                    fileBytes = File.ReadAllBytes($"{directory}\\{name}");
                    fileLocked = false;
                }
                catch (IOException)
                {
                    fileLocked = true;
                    Debug.WriteLine("File still in use!");
                }
            }
            int length;
            
            length = fileBytes.Length - header.Length - 1;
            length = fileBytes.Length > 10000 ? length - 1273 : length;
            byte[] newArray = new byte[length];
            
            for (int i = 0; i < length; i++)
            {
                try
                {
                    newArray[i] = fileBytes[i + header.Length];
                } catch (IndexOutOfRangeException e)
                {
                    Debug.WriteLine(name);
                    //UpdateLastEvent($"Error While Converting File {name}");
                    return;
                }
                
            }
            newArray = BitShift(newArray.Length, newArray);
            fileLocked = true;

            while (fileLocked)
            {
                try
                {
                    File.WriteAllBytes($"{directory}\\{name.Replace(".bin", "")}.mglo", newArray);
                    fileLocked = false;
                } catch (Exception ex)
                {
                    Debug.WriteLine("File still in use!");
                    fileLocked = true;
                    Thread.Sleep(100);
                }
            }

            
        }


        private byte[] BitShift(int length, byte[] array)
        {
            int previousUpperBits = 0;

            for (int i = 0; i<length; i++)
            {
                var currentLowerBits = (array[i] << 4);
                array[i] = (byte)(array[i] >> 4);
                array[i] = array[i] |= (byte)previousUpperBits;
                previousUpperBits = currentLowerBits;
            }

            return array;
            
        }

        
    }
}
